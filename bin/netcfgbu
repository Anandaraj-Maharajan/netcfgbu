#!/usr/bin/env python

import os
from os.path import expandvars
import sys
from pathlib import Path
import csv

import toml
import asyncio
import asyncssh

from netcfgbu.netcfgbu_ssh import ConfigBackupSSHTemplate


def main():
    app_cfg_file = Path(os.environ['NETCFGBU_CONFIG'])

    app_cfg = toml.load(app_cfg_file.open())

    app_defaults = app_cfg['defaults']
    for var_name, var_value in app_defaults.items():
        app_defaults[var_name] = expandvars(var_value)

    configs_dir = Path(app_defaults['configs_dir'])
    if not configs_dir.is_dir():
        configs_dir.mkdir()

    inventory_file = Path(app_defaults['inventory'])
    csv_rd = csv.DictReader(inventory_file.open())
    inventory_recs = list(csv_rd)

    host_cfg = inventory_recs[0]

    try:
        bu = ConfigBackupSSHTemplate(host_cfg=host_cfg, app_cfg=app_cfg)
        asyncio.run(bu.backup_config())

    except (OSError, asyncssh.Error) as exc:
        sys.exit('SSH connection failed: ' + str(exc))


if __name__ == '__main__':
    main()
